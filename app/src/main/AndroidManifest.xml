<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.simpleinstagram">
    <!-- App needs access to internet and the phone's network state -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /> <!-- this needs access to the Parse server (Heroku) -->
    <uses-permission android:name="android.permission.INTERNET" /> <!-- Used for API 30+ -->
    <queries>

        <!-- Camera -->
        <intent>
            <action android:name="android.media.action.IMAGE_CAPTURE" />
        </intent>
    </queries>

    <application
        android:name=".ParseApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.SimpleInstagram">
<!--        declare activities within the app -->
        <activity android:name=".ProfileActivity" />
        <!-- make sure within the application tag, otherwise app will crash with XmlResourceParser errors -->
        <!--
 If you are targeting Android API 24 or higher, private File URI resources (file:///) cannot be shared.
        You must instead wrap the File object as a content provider (content://) using the FileProvider class.
        -->
        <!-- The application should be a content provider -->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="com.example.simpleinstagram"
            android:exported="false"
            android:grantUriPermissions="true">

            <!-- the android:authorities should match up with FileProvider.getUriForFile's authority in Main launchCamera() -->
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/fileprovider" />
        </provider>

        <activity android:name=".LoginActivity">

            <!-- intent MAIN & LAUNCHER is used to open this activity for the first time -->
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".MainActivity"></activity>
    </application>

</manifest>